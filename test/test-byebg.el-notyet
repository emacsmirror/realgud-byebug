;; Press C-x C-e at the end of the next line to run this file test non-interactively
;; (test-simple-run "emacs -batch -L %s -L %s -l %s" (file-name-directory (locate-library "test-simple.elc")) (file-name-directory (locate-library "realgud.elc")) buffer-file-name)
(require 'test-simple)
(require 'load-relative)
(load-file "../byebug/core.el")
(load-file "./regexp-helper.el")

(eval-when-compile
  (defvar realgud:pry-minibuffer-history)
  (defvar test:realgud-byebug-executable-save)
  (defvar test:realgud-minibuffer-history-save)
)

(declare-function realgud:byebug-suggest-invocation 'realgud:bashdb)
(declare-function __FILE__              'require-relative)

(test-simple-start)

;; Save value realgud:run-process and change it to something we want
(setq test:realgud-byebug-executable-save (symbol-function 'realgud:byebug-executable))
(setq test:realgud-minibuffer-history-save realgud:byebug-minibuffer-history)

(defun realgud:byebug-executable (filename)
  "Mock function for testing"
  (cond ((equal filename "foo.rb") 7)
	((equal filename "foo") 8)
	((equal filename "baz") 8)
	(t 3)))

(defun byebug-test()
  (note "realgud:byebug-suggest-invocation")
  (setq realgud:byebug-minibuffer-history nil)
  (let ((my-directory (file-name-directory (__FILE__))))
    (save-excursion
      (note "Test preference to buffer editing")
      (setq default-directory
    	    (concat my-directory "byebug"))
      (find-file-literally "foo.rb")
      (assert-equal "byebug foo" (realgud:byebug-suggest-invocation)
    		    "Should find file sans extension - foo")
      ;; (find-file-literally "baz.c")
      ;; (assert-equal "byebug baz" (realgud:byebug-suggest-invocation)
      ;; 		    "Should find file sans extension - baz")
      )
    ;; (save-excursion
    ;;   (note "Pick up non-sans executable")
    ;;   (setq default-directory
    ;; 	    (concat my-directory  "byebug/test2"))
    ;;   ;; (assert-equal "byebug bar.sh" (realgud:byebug-suggest-invocation))
    ;;   (setq realgud:byebug-minibuffer-history '("byebug testing"))
    ;;   (setq default-directory
    ;; 	    (concat my-directory  "byebug/test2"))
    ;;   (assert-equal "byebug testing" (realgud:byebug-suggest-invocation)
    ;; 		    "After setting minibuffer history - takes precidence")
    ;;   )
    (setq default-directory my-directory)
    )
  )
(byebug-test)
(end-tests)

;; Restore the old values.
;; You might have to run the below if you run this interactively.
(fset 'realgud:byebug-executable test:realgud-byebug-executable-save)
(setq realgud:byebug-minibuffer-history test:realgud-minibuffer-history-save)
(setq default-directory (file-name-directory (__FILE__)))
